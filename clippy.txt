warning: unused import: `nih_plug_egui::egui::Widget`
 --> src/lib.rs:7:5
  |
7 | use nih_plug_egui::egui::Widget;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::sync::mpsc`
  --> src/lib.rs:11:5
   |
11 | use std::sync::mpsc;
   |     ^^^^^^^^^^^^^^^

warning: unused imports: `mem`, `thread`, `time`
  --> src/lib.rs:13:11
   |
13 | use std::{mem, thread, time};
   |           ^^^  ^^^^^^  ^^^^

warning: unnecessary parentheses around assigned value
   --> src/devices/screen.rs:196:25
    |
196 |                 let b = (uxn.ram[uxn.dev + port] as i32);
    |                         ^                              ^
    |
    = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
    |
196 -                 let b = (uxn.ram[uxn.dev + port] as i32);
196 +                 let b = uxn.ram[uxn.dev + port] as i32;
    |

warning: unnecessary parentheses around assigned value
   --> src/devices/screen.rs:207:23
    |
207 |                     let b = (uxn.ram[uxn.dev + 0x23] as i32);
    |                             ^                              ^
    |
help: remove these parentheses
    |
207 -                     let b = (uxn.ram[uxn.dev + 0x23] as i32);
207 +                     let b = uxn.ram[uxn.dev + 0x23] as i32;
    |

warning: unnecessary parentheses around assigned value
   --> src/devices/screen.rs:223:23
    |
223 |                     let b = (uxn.ram[uxn.dev + 0x25] as i32);
    |                             ^                              ^
    |
help: remove these parentheses
    |
223 -                     let b = (uxn.ram[uxn.dev + 0x25] as i32);
223 +                     let b = uxn.ram[uxn.dev + 0x25] as i32;
    |

warning: unnecessary parentheses around assigned value
   --> src/devices/screen.rs:245:19
    |
245 |                 let b = (uxn.ram[uxn.dev + port] as i32);
    |                         ^                              ^
    |
help: remove these parentheses
    |
245 -                 let b = (uxn.ram[uxn.dev + port] as i32);
245 +                 let b = uxn.ram[uxn.dev + port] as i32;
    |

warning: unnecessary parentheses around assigned value
   --> src/devices/screen.rs:255:19
    |
255 |                 let b = (uxn.ram[uxn.dev + port] as i32);
    |                         ^                              ^
    |
help: remove these parentheses
    |
255 -                 let b = (uxn.ram[uxn.dev + port] as i32);
255 +                 let b = uxn.ram[uxn.dev + port] as i32;
    |

warning: unnecessary parentheses around assigned value
   --> src/devices/screen.rs:265:19
    |
265 |                 let b = (uxn.ram[uxn.dev + port] as i32);
    |                         ^                              ^
    |
help: remove these parentheses
    |
265 -                 let b = (uxn.ram[uxn.dev + port] as i32);
265 +                 let b = uxn.ram[uxn.dev + port] as i32;
    |

warning: unnecessary parentheses around assigned value
   --> src/devices/screen.rs:337:29
    |
337 |                 let flipx = (uxn.dev_get(port) & 0x10);
    |                             ^                        ^
    |
help: remove these parentheses
    |
337 -                 let flipx = (uxn.dev_get(port) & 0x10);
337 +                 let flipx = uxn.dev_get(port) & 0x10;
    |

warning: unnecessary parentheses around assigned value
   --> src/devices/screen.rs:338:29
    |
338 |                 let flipy = (uxn.dev_get(port) & 0x20);
    |                             ^                        ^
    |
help: remove these parentheses
    |
338 -                 let flipy = (uxn.dev_get(port) & 0x20);
338 +                 let flipy = uxn.dev_get(port) & 0x20;
    |

warning: unnecessary parentheses around assigned value
  --> src/devices/mouse.rs:28:25
   |
28 |                 let b = (uxn.ram[uxn.dev + port] as i32);
   |                         ^                              ^
   |
help: remove these parentheses
   |
28 -                 let b = (uxn.ram[uxn.dev + port] as i32);
28 +                 let b = uxn.ram[uxn.dev + port] as i32;
   |

warning: unnecessary parentheses around assigned value
   --> src/operations.rs:143:17
    |
143 |         let b = (self.ram[x + 1] as i32);
    |                 ^                      ^
    |
help: remove these parentheses
    |
143 -         let b = (self.ram[x + 1] as i32);
143 +         let b = self.ram[x + 1] as i32;
    |

warning: unused import: `crate::uxn::UXN`
 --> src/system/mod.rs:1:5
  |
1 | use crate::uxn::UXN;
  |     ^^^^^^^^^^^^^^^

warning: unused import: `std::sync::mpsc`
 --> src/uxn.rs:3:5
  |
3 | use std::sync::mpsc;
  |     ^^^^^^^^^^^^^^^

warning: unused import: `ColorImage`
 --> src/uxn.rs:5:36
  |
5 | use nih_plug_egui::egui::{Color32, ColorImage};
  |                                    ^^^^^^^^^^

warning: this `if` statement can be collapsed
   --> src/devices/screen.rs:149:9
    |
149 | /         if x < (self.width as usize) {
150 | |             if y < (self.height as usize) {
151 | |
152 | |                  // write to the foreground buffer
...   |
172 | |             }
173 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if
    = note: `#[warn(clippy::collapsible_if)]` on by default
help: collapse nested if block
    |
149 ~         if x < (self.width as usize) && y < (self.height as usize) {
150 + 
151 ~                          // write to the foreground buffer
152 ~                         if layer != 0x00 {
153 +                             // simulate alpha blending
154 +                             if color == self.color0 {
155 +                                 color = Color32::TRANSPARENT;
156 +                             }
157 + 
158 ~                             if color != self.fg[(x, y)] {
159 ~                                 self.fg[(x, y)] = color;
160 ~                                 self.redraw = true;
161 ~                             }
162 + 
163 ~                          // write to the background buffer
164 ~                         } else {
165 ~                             if color != self.bg[(x, y)] {
166 ~                                 self.bg[(x, y)] = color;
167 ~                                 self.redraw = true;
168 ~                             }
169 ~                         }
170 + 
171 ~                     }
    |

warning: this `else { if .. }` block can be collapsed
   --> src/devices/screen.rs:165:18
    |
165 |                   } else {
    |  ________________________^
166 | |                     if color != self.bg[(x, y)] {
167 | |                         self.bg[(x, y)] = color;
168 | |                         self.redraw = true;
169 | |                     }
170 | |                 }
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
    = note: `#[warn(clippy::collapsible_else_if)]` on by default
help: collapse nested if block
    |
165 ~                 } else if color != self.bg[(x, y)] {
166 ~                                   self.bg[(x, y)] = color;
167 ~                                   self.redraw = true;
168 ~                               }
    |

warning: value assigned to `h` is never read
  --> src/devices/screen.rs:98:17
   |
98 |         let mut h: i8 = 7;
   |                 ^
   |
   = help: maybe it is overwritten before being read?
   = note: `#[warn(unused_assignments)]` on by default

warning: unused variable: `val`
   --> src/devices/screen.rs:187:43
    |
187 | pub fn screen(uxn: &mut UXN, port: usize, val: u8) {
    |                                           ^^^ help: if this is intentional, prefix it with an underscore: `_val`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `val`
  --> src/devices/system.rs:14:43
   |
14 | pub fn system(uxn: &mut UXN, port: usize, val: u8) {
   |                                           ^^^ help: if this is intentional, prefix it with an underscore: `_val`

warning: unused variable: `val`
  --> src/devices/mouse.rs:21:42
   |
21 | pub fn mouse(uxn: &mut UXN, port: usize, val: u8) {
   |                                          ^^^ help: if this is intentional, prefix it with an underscore: `_val`

warning: unused variable: `params`
   --> src/lib.rs:167:13
    |
167 |         let params = self.params.clone();
    |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_params`

warning: unused variable: `peak_meter`
   --> src/lib.rs:168:13
    |
168 |         let peak_meter = self.peak_meter.clone();
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_peak_meter`

warning: unused variable: `async_executor`
   --> src/lib.rs:115:22
    |
115 |     fn editor(&self, async_executor: AsyncExecutor<Self>) -> Option<Box<dyn Editor>> {
    |                      ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_async_executor`

warning: unused variable: `setter`
   --> src/lib.rs:185:24
    |
185 |             move |ctx, setter, _state| {
    |                        ^^^^^^ help: if this is intentional, prefix it with an underscore: `_setter`

warning: unused variable: `ui`
   --> src/lib.rs:187:58
    |
187 |                 egui::CentralPanel::default().show(ctx, |ui| {
    |                                                          ^^ help: if this is intentional, prefix it with an underscore: `_ui`

warning: variable does not need to be mutable
   --> src/lib.rs:242:37
    |
242 | ...                   let mut x = if pos.x >= min.x { if pos.x <= max.x { pos.x } else { max.x } } else { min.x };
    |                           ----^
    |                           |
    |                           help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
   --> src/lib.rs:243:37
    |
243 | ...                   let mut y = if pos.y >= min.y { if pos.y <= max.y { pos.y } else { max.y } } else { min.y };
    |                           ----^
    |                           |
    |                           help: remove this `mut`

warning: associated function `wst_get` is never used
  --> src/uxn.rs:79:12
   |
79 |     pub fn wst_get(&self, index: usize) -> u8 {
   |            ^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: associated function `rst_get` is never used
  --> src/uxn.rs:83:12
   |
83 |     pub fn rst_get(&self, index: usize) -> u8 {
   |            ^^^^^^^

warning: associated function `clamp` is never used
   --> src/uxn.rs:133:12
    |
133 |     pub fn clamp(&self, val: u16, min: u16, max: u16) -> u16 {
    |            ^^^^^

warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`
  --> src/devices/console.rs:31:17
   |
31 | /                 match char::from_u32(val.into()) {
32 | |                     Some(c) => print!("{}", c),
33 | |                     None => {}
34 | |                 }
   | |_________________^ help: try this: `if let Some(c) = char::from_u32(val.into()) { print!("{}", c) }`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
   = note: `#[warn(clippy::single_match)]` on by default

warning: this function has too many arguments (10/7)
  --> src/devices/screen.rs:96:5
   |
96 |     pub fn screen_blit(&mut self, layer: u8, x: u16, y: u16, sprite: &[u8], color: usize, flipx: u8, flipy: u8, twobpp: u8, opaque: u8) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments
   = note: `#[warn(clippy::too_many_arguments)]` on by default

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> src/devices/screen.rs:128:63
    |
128 | ...                   y.wrapping_add(7_u16.wrapping_sub(v as u16))
    |                                                         ^^^^^^^^ help: try: `v`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast
    = note: `#[warn(clippy::unnecessary_cast)]` on by default

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> src/devices/screen.rs:130:44
    |
130 | ...                   y.wrapping_add(v as u16)
    |                                      ^^^^^^^^ help: try: `v`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: unneeded `return` statement
   --> src/devices/screen.rs:183:9
    |
183 |         return self.vector;
    |         ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
    = note: `#[warn(clippy::needless_return)]` on by default
    = help: remove `return`

warning: boolean to int conversion using if
   --> src/devices/screen.rs:303:14
    |
303 | /                 if (uxn.dev_get(port) & 0x80) != 0 {
304 | |                     1
305 | |                 } else {
306 | |                     0
307 | |                 }
    | |_________________^ help: replace with from: `u8::from((uxn.dev_get(port) & 0x80) != 0)`
    |
    = note: `((uxn.dev_get(port) & 0x80) != 0) as u8` or `((uxn.dev_get(port) & 0x80) != 0).into()` can also be valid options
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_to_int_with_if
    = note: `#[warn(clippy::bool_to_int_with_if)]` on by default

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> src/devices/screen.rs:334:37
    |
334 |                 let sprite_x: u16 = x.wrapping_add( dy.wrapping_mul(i) ) as u16;
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `x.wrapping_add( dy.wrapping_mul(i) )`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: casting to the same type is unnecessary (`u16` -> `u16`)
   --> src/devices/screen.rs:335:37
    |
335 |                 let sprite_y: u16 = y.wrapping_add( dx.wrapping_mul(i) ) as u16;
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `y.wrapping_add( dx.wrapping_mul(i) )`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: useless conversion to the same type: `u16`
   --> src/devices/screen.rs:354:45
    |
354 |             uxn.dev_poke(section + 0x8, x + u16::from(dx));
    |                                             ^^^^^^^^^^^^^ help: consider removing `u16::from()`: `dx`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion
    = note: `#[warn(clippy::useless_conversion)]` on by default

warning: useless conversion to the same type: `u16`
   --> src/devices/screen.rs:355:32
    |
355 |             uxn.screen.x = x + u16::from(dx);
    |                                ^^^^^^^^^^^^^ help: consider removing `u16::from()`: `dx`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

warning: unneeded `return` statement
   --> src/devices/system.rs:107:5
    |
107 |     return (c1 + (c1 << 4), c2 + (c2 << 4));
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
    = help: remove `return`

warning: this operation has no effect
   --> src/devices/system.rs:105:14
    |
105 |     let c2 = (mem_color >> (0 << 2)) & 0x0F;
    |              ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `mem_color`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op
    = note: `#[warn(clippy::identity_op)]` on by default

warning: unneeded `return` statement
  --> src/devices/mouse.rs:17:9
   |
17 |         return self.vector;
   |         ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
   = help: remove `return`

warning: unneeded `return` statement
  --> src/operations.rs:19:9
   |
19 |         return self.ram[self.dev + port];
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
   = help: remove `return`

warning: unneeded `return` statement
  --> src/operations.rs:40:13
   |
40 |             return (((self.DEI(port) as i32) << 8) + (self.DEI(port + 1) as i32)) as u16;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
   = help: remove `return`

warning: unneeded `return` statement
  --> src/operations.rs:42:13
   |
42 |             return self.DEI(port).into();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
   = help: remove `return`

warning: unneeded `return` statement
  --> src/operations.rs:70:13
   |
70 |             return addr;
   |             ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
   = help: remove `return`

warning: unneeded `return` statement
  --> src/operations.rs:72:13
   |
72 |             return pc.wrapping_add(self.rel(addr));
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
   = help: remove `return`

warning: unneeded `return` statement
   --> src/operations.rs:121:9
    |
121 |         return (a + b) as u16;
    |         ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
    = help: remove `return`

warning: unneeded `return` statement
   --> src/operations.rs:130:9
    |
130 |         return self.ram[self.src + index];
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
    = help: remove `return`

warning: unneeded `return` statement
   --> src/operations.rs:135:13
    |
135 |             return self.POP16();
    |             ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
    = help: remove `return`

warning: unneeded `return` statement
   --> src/operations.rs:137:13
    |
137 |             return self.POP8() as u16;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
    = help: remove `return`

warning: unneeded `return` statement
   --> src/operations.rs:145:9
    |
145 |         return (a + b) as u16;
    |         ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
    = help: remove `return`

warning: unneeded `return` statement
   --> src/operations.rs:150:13
    |
150 |             return self.PEEK16(x);
    |             ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
    = help: remove `return`

warning: unneeded `return` statement
   --> src/operations.rs:152:13
    |
152 |             return self.ram[x] as u16;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
    = help: remove `return`

warning: name `LIT` contains a capitalized acronym
 --> src/system/opcodes.rs:3:5
  |
3 |     LIT = 0x00,
  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Lit`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms
  = note: `#[warn(clippy::upper_case_acronyms)]` on by default

warning: name `INC` contains a capitalized acronym
 --> src/system/opcodes.rs:4:5
  |
4 |     INC = 0x01,
  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Inc`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `POP` contains a capitalized acronym
 --> src/system/opcodes.rs:5:5
  |
5 |     POP = 0x02,
  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Pop`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `NIP` contains a capitalized acronym
 --> src/system/opcodes.rs:6:5
  |
6 |     NIP = 0x03,
  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Nip`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `SWP` contains a capitalized acronym
 --> src/system/opcodes.rs:7:5
  |
7 |     SWP = 0x04,
  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Swp`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `ROT` contains a capitalized acronym
 --> src/system/opcodes.rs:8:5
  |
8 |     ROT = 0x05,
  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rot`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `DUP` contains a capitalized acronym
 --> src/system/opcodes.rs:9:5
  |
9 |     DUP = 0x06,
  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Dup`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `OVR` contains a capitalized acronym
  --> src/system/opcodes.rs:10:5
   |
10 |     OVR = 0x07,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Ovr`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `EQU` contains a capitalized acronym
  --> src/system/opcodes.rs:13:5
   |
13 |     EQU = 0x08,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Equ`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `NEQ` contains a capitalized acronym
  --> src/system/opcodes.rs:14:5
   |
14 |     NEQ = 0x09,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Neq`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `GTH` contains a capitalized acronym
  --> src/system/opcodes.rs:15:5
   |
15 |     GTH = 0x0a,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Gth`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `LTH` contains a capitalized acronym
  --> src/system/opcodes.rs:16:5
   |
16 |     LTH = 0x0b,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Lth`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `JMP` contains a capitalized acronym
  --> src/system/opcodes.rs:17:5
   |
17 |     JMP = 0x0c,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Jmp`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `JCN` contains a capitalized acronym
  --> src/system/opcodes.rs:18:5
   |
18 |     JCN = 0x0d,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Jcn`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `JSR` contains a capitalized acronym
  --> src/system/opcodes.rs:19:5
   |
19 |     JSR = 0x0e,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Jsr`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `STH` contains a capitalized acronym
  --> src/system/opcodes.rs:20:5
   |
20 |     STH = 0x0f,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Sth`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `LDZ` contains a capitalized acronym
  --> src/system/opcodes.rs:23:5
   |
23 |     LDZ = 0x10,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Ldz`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `STZ` contains a capitalized acronym
  --> src/system/opcodes.rs:24:5
   |
24 |     STZ = 0x11,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Stz`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `LDR` contains a capitalized acronym
  --> src/system/opcodes.rs:25:5
   |
25 |     LDR = 0x12,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Ldr`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `STR` contains a capitalized acronym
  --> src/system/opcodes.rs:26:5
   |
26 |     STR = 0x13,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Str`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `LDA` contains a capitalized acronym
  --> src/system/opcodes.rs:27:5
   |
27 |     LDA = 0x14,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Lda`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `STA` contains a capitalized acronym
  --> src/system/opcodes.rs:28:5
   |
28 |     STA = 0x15,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Sta`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `DEI` contains a capitalized acronym
  --> src/system/opcodes.rs:29:5
   |
29 |     DEI = 0x16,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Dei`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `DEO` contains a capitalized acronym
  --> src/system/opcodes.rs:30:5
   |
30 |     DEO = 0x17,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Deo`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `ADD` contains a capitalized acronym
  --> src/system/opcodes.rs:33:5
   |
33 |     ADD = 0x18,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Add`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `SUB` contains a capitalized acronym
  --> src/system/opcodes.rs:34:5
   |
34 |     SUB = 0x19,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Sub`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `MUL` contains a capitalized acronym
  --> src/system/opcodes.rs:35:5
   |
35 |     MUL = 0x1a,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Mul`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `DIV` contains a capitalized acronym
  --> src/system/opcodes.rs:36:5
   |
36 |     DIV = 0x1b,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Div`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `AND` contains a capitalized acronym
  --> src/system/opcodes.rs:37:5
   |
37 |     AND = 0x1c,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `And`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `ORA` contains a capitalized acronym
  --> src/system/opcodes.rs:38:5
   |
38 |     ORA = 0x1d,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Ora`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `EOR` contains a capitalized acronym
  --> src/system/opcodes.rs:39:5
   |
39 |     EOR = 0x1e,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eor`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `SFT` contains a capitalized acronym
  --> src/system/opcodes.rs:40:5
   |
40 |     SFT = 0x1f,
   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Sft`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: name `UXN` contains a capitalized acronym
 --> src/uxn.rs:9:12
  |
9 | pub struct UXN {
  |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Uxn`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms

warning: unneeded `return` statement
  --> src/uxn.rs:80:9
   |
80 |         return self.ram[self.wst + index];
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
   = help: remove `return`

warning: unneeded `return` statement
  --> src/uxn.rs:84:9
   |
84 |         return self.ram[self.rst + index];
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
   = help: remove `return`

warning: unneeded `return` statement
  --> src/uxn.rs:88:9
   |
88 |         return self.ram[self.dev + index];
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
   = help: remove `return`

warning: unneeded `return` statement
  --> src/uxn.rs:92:9
   |
92 |         return self.ram[self.src + index];
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
   = help: remove `return`

warning: unneeded `return` statement
  --> src/uxn.rs:96:9
   |
96 |         return self.ram[self.dst + index];
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
   = help: remove `return`

warning: unneeded `return` statement
   --> src/uxn.rs:100:9
    |
100 |         return self.get(0xff);
    |         ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
    = help: remove `return`

warning: unneeded `return` statement
   --> src/uxn.rs:108:9
    |
108 |         return val.into();
    |         ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
    = help: remove `return`

warning: using `clone` on type `u8` which implements the `Copy` trait
   --> src/uxn.rs:104:19
    |
104 |         let val = self.ram[self.src + 0xff].clone();
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.ram[self.src + 0xff]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy
    = note: `#[warn(clippy::clone_on_copy)]` on by default

warning: manual implementation of an assign operation
   --> src/uxn.rs:106:9
    |
106 |         self.ram[self.src + 0xff] = self.ram[self.src + 0xff] + 1;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `self.ram[self.src + 0xff] += 1`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern
    = note: `#[warn(clippy::assign_op_pattern)]` on by default

warning: unneeded `return` statement
   --> src/uxn.rs:116:9
    |
116 |         return val.into();
    |         ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
    = help: remove `return`

warning: manual implementation of an assign operation
   --> src/uxn.rs:114:9
    |
114 |         self.ram[self.dst + 0xff] = self.ram[self.dst + 0xff] + 1;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `self.ram[self.dst + 0xff] += 1`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: unneeded `return` statement
   --> src/uxn.rs:120:9
    |
120 |         return self.dst_get(0xff);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
    = help: remove `return`

warning: unneeded `return` statement
   --> src/uxn.rs:126:13
    |
126 |             return self.pk;
    |             ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
    = help: remove `return`

warning: unneeded `return` statement
   --> src/uxn.rs:129:13
    |
129 |             return (self.ram[self.src + 0xff]).into();
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
    = help: remove `return`

warning: manual implementation of an assign operation
   --> src/uxn.rs:125:13
    |
125 |             self.pk = self.pk - 1;
    |             ^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `self.pk -= 1`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: manual implementation of an assign operation
   --> src/uxn.rs:128:13
    |
128 |             self.ram[self.src + 0xff] = self.ram[self.src + 0xff] - 1;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `self.ram[self.src + 0xff] -= 1`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: unneeded `return` statement
   --> src/uxn.rs:147:9
    |
147 |         return 1;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
    = help: remove `return`

warning: unneeded `return` statement
   --> src/uxn.rs:610:9
    |
610 |         return pc;
    |         ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
    = help: remove `return`

warning: manual implementation of an assign operation
   --> src/uxn.rs:194:9
    |
194 |         pc = pc + 1;
    |         ^^^^^^^^^^^ help: replace it with: `pc += 1`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: manual implementation of an assign operation
   --> src/uxn.rs:241:17
    |
241 |                 pc = pc + (1 + self.bs);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `pc += (1 + self.bs)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern

warning: useless conversion to the same type: `u16`
   --> src/uxn.rs:251:27
    |
251 |                 self.PUSH(self.a.wrapping_add(1).into());
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `self.a.wrapping_add(1)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

warning: useless conversion to the same type: `u16`
   --> src/uxn.rs:269:27
    |
269 |                 self.PUSH(self.a.into());
    |                           ^^^^^^^^^^^^^ help: consider removing `.into()`: `self.a`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

warning: useless conversion to the same type: `u16`
   --> src/uxn.rs:379:26
    |
379 |                 self.a = self.POP().into();
    |                          ^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `self.POP()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

warning: useless conversion to the same type: `u16`
   --> src/uxn.rs:400:26
    |
400 |                 self.a = self.POP().into();
    |                          ^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `self.POP()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

warning: useless conversion to the same type: `u16`
   --> src/uxn.rs:487:27
    |
487 |                 self.PUSH(self.DEVR(self.a.into()).into());
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `self.DEVR(self.a.into())`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

warning: static variable `blending` should have an upper case name
 --> src/devices/screen.rs:4:8
  |
4 | static blending: [[u8; 16]; 5] = [
  |        ^^^^^^^^ help: convert the identifier to upper case: `BLENDING`
  |
  = note: `#[warn(non_upper_case_globals)]` on by default

warning: method `DEI` should have a snake case name
  --> src/operations.rs:18:12
   |
18 |     pub fn DEI(&self, port: usize) -> u8 {
   |            ^^^ help: convert the identifier to snake case: `dei`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: method `DEO` should have a snake case name
  --> src/operations.rs:22:12
   |
22 |     pub fn DEO(&mut self, port: usize, val: u8) {
   |            ^^^ help: convert the identifier to snake case: `deo`

warning: method `DEVR` should have a snake case name
  --> src/operations.rs:38:12
   |
38 |     pub fn DEVR(&self, port: usize) -> u16 {
   |            ^^^^ help: convert the identifier to snake case: `devr`

warning: method `DEVW` should have a snake case name
  --> src/operations.rs:46:12
   |
46 |     pub fn DEVW(&mut self, port: usize, val: u16) {
   |            ^^^^ help: convert the identifier to snake case: `devw`

warning: method `POKE8` should have a snake case name
  --> src/operations.rs:55:12
   |
55 |     pub fn POKE8(&mut self, addr: usize, val: u8) {
   |            ^^^^^ help: convert the identifier to snake case: `poke8`

warning: method `POKE` should have a snake case name
  --> src/operations.rs:59:12
   |
59 |     pub fn POKE(&mut self, addr: usize, val: u16) {
   |            ^^^^ help: convert the identifier to snake case: `poke`

warning: method `JUMP` should have a snake case name
  --> src/operations.rs:68:12
   |
68 |     pub fn JUMP(&self, addr: usize, pc: usize) -> usize {
   |            ^^^^ help: convert the identifier to snake case: `jump`

warning: method `DST_PUSH16` should have a snake case name
  --> src/operations.rs:76:12
   |
76 |     pub fn DST_PUSH16(&mut self, s: u16) {
   |            ^^^^^^^^^^ help: convert the identifier to snake case: `dst_push16`

warning: method `DST_PUSH8` should have a snake case name
  --> src/operations.rs:84:12
   |
84 |     pub fn DST_PUSH8(&mut self, s: u8) {
   |            ^^^^^^^^^ help: convert the identifier to snake case: `dst_push8`

warning: method `PUSH16` should have a snake case name
  --> src/operations.rs:92:12
   |
92 |     pub fn PUSH16(&mut self, s: u16) {
   |            ^^^^^^ help: convert the identifier to snake case: `push16`

warning: method `PUSH8` should have a snake case name
   --> src/operations.rs:100:12
    |
100 |     pub fn PUSH8(&mut self, s: u8) {
    |            ^^^^^ help: convert the identifier to snake case: `push8`

warning: method `PUSH` should have a snake case name
   --> src/operations.rs:109:12
    |
109 |     pub fn PUSH(&mut self, s: u16) {
    |            ^^^^ help: convert the identifier to snake case: `push`

warning: method `POP16` should have a snake case name
   --> src/operations.rs:117:12
    |
117 |     pub fn POP16(&mut self) -> u16 {
    |            ^^^^^ help: convert the identifier to snake case: `pop16`

warning: method `POP8` should have a snake case name
   --> src/operations.rs:124:12
    |
124 |     pub fn POP8(&mut self) -> u8 {
    |            ^^^^ help: convert the identifier to snake case: `pop8`

warning: method `POP` should have a snake case name
   --> src/operations.rs:133:12
    |
133 |     pub fn POP(&mut self) -> u16 {
    |            ^^^ help: convert the identifier to snake case: `pop`

warning: method `PEEK16` should have a snake case name
   --> src/operations.rs:141:12
    |
141 |     pub fn PEEK16(&self, x: usize) -> u16 {
    |            ^^^^^^ help: convert the identifier to snake case: `peek16`

warning: method `PEEK` should have a snake case name
   --> src/operations.rs:148:12
    |
148 |     pub fn PEEK(&self, x: usize) -> u16 {
    |            ^^^^ help: convert the identifier to snake case: `peek`

warning: `auxn` (lib) generated 133 warnings
warning: unused import: `crate::uxn::UXN`
 --> src/system/mod.rs:1:5
  |
1 | use crate::uxn::UXN;
  |     ^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: struct `ConsoleDevice` is never constructed
 --> src/devices/console.rs:3:12
  |
3 | pub struct ConsoleDevice {}
  |            ^^^^^^^^^^^^^
  |
  = note: `#[warn(dead_code)]` on by default

warning: function `console` is never used
  --> src/devices/console.rs:11:8
   |
11 | pub fn console(uxn: &mut UXN, port: usize, val: u8) {
   |        ^^^^^^^

warning: associated function `new` is never used
 --> src/devices/console.rs:6:12
  |
6 |     pub fn new() -> Self {
  |            ^^^

warning: static `blending` is never used
 --> src/devices/screen.rs:4:8
  |
4 | static blending: [[u8; 16]; 5] = [
  |        ^^^^^^^^

warning: struct `ScreenDevice` is never constructed
  --> src/devices/screen.rs:12:12
   |
12 | pub struct ScreenDevice {
   |            ^^^^^^^^^^^^

warning: function `screen` is never used
   --> src/devices/screen.rs:187:8
    |
187 | pub fn screen(uxn: &mut UXN, port: usize, val: u8) {
    |        ^^^^^^

warning: associated function `new` is never used
  --> src/devices/screen.rs:45:12
   |
45 |     pub fn new(w: u32, h: u32) -> Self {
   |            ^^^

warning: associated function `get_color` is never used
  --> src/devices/screen.rs:71:12
   |
71 |     pub fn get_color(&self, index: u8) -> Color32 {
   |            ^^^^^^^^^

warning: associated function `generate` is never used
  --> src/devices/screen.rs:82:12
   |
82 |     pub fn generate(&mut self, ctx: &Context) {
   |            ^^^^^^^^

warning: associated function `screen_blit` is never used
  --> src/devices/screen.rs:96:12
   |
96 |     pub fn screen_blit(&mut self, layer: u8, x: u16, y: u16, sprite: &[u8], color: usize, flipx: u8, flipy: u8, twobpp: u8, opaque: u8) {
   |            ^^^^^^^^^^^

warning: associated function `screen_write` is never used
   --> src/devices/screen.rs:146:12
    |
146 |     pub fn screen_write(&mut self, x: usize, y: usize, mut color: Color32, layer: u8) {
    |            ^^^^^^^^^^^^

warning: associated function `resize` is never used
   --> src/devices/screen.rs:176:12
    |
176 |     pub fn resize(&mut self) {
    |            ^^^^^^

warning: associated function `vector` is never used
   --> src/devices/screen.rs:182:12
    |
182 |     pub fn vector(&self) -> usize {
    |            ^^^^^^

warning: struct `SystemDevice` is never constructed
 --> src/devices/system.rs:6:12
  |
6 | pub struct SystemDevice {}
  |            ^^^^^^^^^^^^

warning: function `system` is never used
  --> src/devices/system.rs:14:8
   |
14 | pub fn system(uxn: &mut UXN, port: usize, val: u8) {
   |        ^^^^^^

warning: function `palette` is never used
   --> src/devices/system.rs:103:4
    |
103 | fn palette(mem_color: u8) -> (u8, u8) {
    |    ^^^^^^^

warning: associated function `new` is never used
 --> src/devices/system.rs:9:12
  |
9 |     pub fn new() -> Self {
  |            ^^^

warning: struct `MouseDevice` is never constructed
 --> src/devices/mouse.rs:3:12
  |
3 | pub struct MouseDevice {
  |            ^^^^^^^^^^^

warning: function `mouse` is never used
  --> src/devices/mouse.rs:21:8
   |
21 | pub fn mouse(uxn: &mut UXN, port: usize, val: u8) {
   |        ^^^^^

warning: function `mouse_pos` is never used
  --> src/devices/mouse.rs:40:8
   |
40 | pub fn mouse_pos(uxn: &mut UXN, screen_x: f32, screen_y: f32) {
   |        ^^^^^^^^^

warning: function `mouse_down` is never used
  --> src/devices/mouse.rs:48:8
   |
48 | pub fn mouse_down(uxn: &mut UXN) {
   |        ^^^^^^^^^^

warning: function `mouse_up` is never used
  --> src/devices/mouse.rs:54:8
   |
54 | pub fn mouse_up(uxn: &mut UXN) {
   |        ^^^^^^^^

warning: associated function `new` is never used
 --> src/devices/mouse.rs:9:12
  |
9 |     pub fn new() -> Self {
  |            ^^^

warning: associated function `vector` is never used
  --> src/devices/mouse.rs:16:12
   |
16 |     pub fn vector(&self) -> usize {
   |            ^^^^^^

warning: associated function `dev_poke` is never used
 --> src/operations.rs:5:9
  |
5 |     pub fn dev_poke(&mut self, addr: usize, val: u16) {
  |            ^^^^^^^^

warning: associated function `rel` is never used
  --> src/operations.rs:10:12
   |
10 |     pub fn rel(&self, val: usize) -> usize {
   |            ^^^

warning: associated function `DEI` is never used
  --> src/operations.rs:18:12
   |
18 |     pub fn DEI(&self, port: usize) -> u8 {
   |            ^^^

warning: associated function `DEO` is never used
  --> src/operations.rs:22:12
   |
22 |     pub fn DEO(&mut self, port: usize, val: u8) {
   |            ^^^

warning: associated function `DEVR` is never used
  --> src/operations.rs:38:12
   |
38 |     pub fn DEVR(&self, port: usize) -> u16 {
   |            ^^^^

warning: associated function `DEVW` is never used
  --> src/operations.rs:46:12
   |
46 |     pub fn DEVW(&mut self, port: usize, val: u16) {
   |            ^^^^

warning: associated function `POKE8` is never used
  --> src/operations.rs:55:12
   |
55 |     pub fn POKE8(&mut self, addr: usize, val: u8) {
   |            ^^^^^

warning: associated function `POKE` is never used
  --> src/operations.rs:59:12
   |
59 |     pub fn POKE(&mut self, addr: usize, val: u16) {
   |            ^^^^

warning: associated function `JUMP` is never used
  --> src/operations.rs:68:12
   |
68 |     pub fn JUMP(&self, addr: usize, pc: usize) -> usize {
   |            ^^^^

warning: associated function `DST_PUSH16` is never used
  --> src/operations.rs:76:12
   |
76 |     pub fn DST_PUSH16(&mut self, s: u16) {
   |            ^^^^^^^^^^

warning: associated function `DST_PUSH8` is never used
  --> src/operations.rs:84:12
   |
84 |     pub fn DST_PUSH8(&mut self, s: u8) {
   |            ^^^^^^^^^

warning: associated function `PUSH16` is never used
  --> src/operations.rs:92:12
   |
92 |     pub fn PUSH16(&mut self, s: u16) {
   |            ^^^^^^

warning: associated function `PUSH8` is never used
   --> src/operations.rs:100:12
    |
100 |     pub fn PUSH8(&mut self, s: u8) {
    |            ^^^^^

warning: associated function `PUSH` is never used
   --> src/operations.rs:109:12
    |
109 |     pub fn PUSH(&mut self, s: u16) {
    |            ^^^^

warning: associated function `POP16` is never used
   --> src/operations.rs:117:12
    |
117 |     pub fn POP16(&mut self) -> u16 {
    |            ^^^^^

warning: associated function `POP8` is never used
   --> src/operations.rs:124:12
    |
124 |     pub fn POP8(&mut self) -> u8 {
    |            ^^^^

warning: associated function `POP` is never used
   --> src/operations.rs:133:12
    |
133 |     pub fn POP(&mut self) -> u16 {
    |            ^^^

warning: associated function `PEEK16` is never used
   --> src/operations.rs:141:12
    |
141 |     pub fn PEEK16(&self, x: usize) -> u16 {
    |            ^^^^^^

warning: associated function `PEEK` is never used
   --> src/operations.rs:148:12
    |
148 |     pub fn PEEK(&self, x: usize) -> u16 {
    |            ^^^^

warning: constant `MAX_INSTR` is never used
 --> src/uxn.rs:7:7
  |
7 | const MAX_INSTR: u8 = 0x1f;
  |       ^^^^^^^^^

warning: struct `UXN` is never constructed
 --> src/uxn.rs:9:12
  |
9 | pub struct UXN {
  |            ^^^

warning: associated function `new` is never used
  --> src/uxn.rs:40:12
   |
40 |     pub fn new(w: u32, h: u32) -> Self {
   |            ^^^

warning: associated function `load` is never used
  --> src/uxn.rs:73:12
   |
73 |     pub fn load(&mut self, program: Vec<u8>) {
   |            ^^^^

warning: associated function `wst_get` is never used
  --> src/uxn.rs:79:12
   |
79 |     pub fn wst_get(&self, index: usize) -> u8 {
   |            ^^^^^^^

warning: associated function `dev_get` is never used
  --> src/uxn.rs:87:12
   |
87 |     pub fn dev_get(&self, index: usize) -> u8 {
   |            ^^^^^^^

warning: associated function `get` is never used
  --> src/uxn.rs:91:12
   |
91 |     pub fn get(&self, index: usize) -> u8 {
   |            ^^^

warning: associated function `dst_get` is never used
  --> src/uxn.rs:95:12
   |
95 |     pub fn dst_get(&self, index: usize) -> u8 {
   |            ^^^^^^^

warning: associated function `ptr` is never used
  --> src/uxn.rs:99:12
   |
99 |     pub fn ptr(&self) -> u8 {
   |            ^^^

warning: associated function `inc` is never used
   --> src/uxn.rs:103:12
    |
103 |     pub fn inc(&mut self) -> usize {
    |            ^^^

warning: associated function `dst_inc` is never used
   --> src/uxn.rs:111:12
    |
111 |     pub fn dst_inc(&mut self) -> usize {
    |            ^^^^^^^

warning: associated function `dst_ptr` is never used
   --> src/uxn.rs:119:12
    |
119 |     pub fn dst_ptr(&self) -> u8 {
    |            ^^^^^^^

warning: associated function `dec` is never used
   --> src/uxn.rs:123:12
    |
123 |     pub fn dec(&mut self) -> usize {
    |            ^^^

warning: associated function `bg_color` is never used
   --> src/uxn.rs:137:12
    |
137 |     pub fn bg_color(&mut self) {
    |            ^^^^^^^^

warning: associated function `interrupt` is never used
   --> src/uxn.rs:146:8
    |
146 |     fn interrupt(&self) -> u8 {
    |        ^^^^^^^^^

warning: associated function `reset` is never used
   --> src/uxn.rs:150:8
    |
150 |     fn reset(&mut self) {
    |        ^^^^^

warning: associated function `eval` is never used
   --> src/uxn.rs:178:12
    |
178 |     pub fn eval(&mut self, mut pc: usize) {
    |            ^^^^

warning: associated function `step` is never used
   --> src/uxn.rs:190:12
    |
190 |     pub fn step(&mut self, mut pc: usize) -> usize {
    |            ^^^^

warning: `auxn` (bin "auxn") generated 183 warnings (121 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 0.30s
